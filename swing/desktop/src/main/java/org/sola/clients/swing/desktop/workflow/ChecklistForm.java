/*
 * Copyright 2013 Food and Agriculture Organization of the United Nations (FAO).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sola.clients.swing.desktop.workflow;

import org.sola.clients.beans.application.ApplicationBean;
import org.sola.clients.beans.application.ApplicationServiceBean;
import org.sola.clients.swing.ui.ContentPanel;

/**
 *
 * @author Admin
 */
public class ChecklistForm extends ContentPanel {

    private ApplicationBean applicationBean;
    private ApplicationServiceBean applicationService;
    
    /**
     * Creates new form ChecklistForm
     */
    public ChecklistForm() {
        initComponents();
    }
    
    public ChecklistForm(ApplicationBean applicationBean, ApplicationServiceBean applicationService){
        this.applicationBean = applicationBean;
        this.applicationService = applicationService;
        initComponents();
        customizeForm();
    }
    
    private void customizeForm() {
        if (applicationService != null && applicationBean != null) {
             headerPanel.setTitleText(String.format("%s for Application: #%s",
                    applicationService.getRequestType().getDisplayValue(), 
                    applicationBean.getNr()));
        }
    }    
    
    private org.sola.clients.beans.referencedata.LandUseTypeListBean landUseTypeListBean;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checklistGroupListBean = new org.sola.clients.beans.referencedata.ChecklistGroupListBean();
        checklistItemBean = new org.sola.clients.beans.referencedata.ChecklistItemBean();
        headerPanel = new org.sola.clients.swing.ui.HeaderPanel();
        leaseHoldLabel = new javax.swing.JLabel();
        cbxChecklistGroup = new javax.swing.JComboBox();
        checklistPanel = new javax.swing.JScrollPane();
        checklistTable = new org.sola.clients.swing.common.controls.JTableWithDefaultStyles();

        setHeaderPanel(headerPanel);
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(683, 450));

        headerPanel.setTitleText("Checklist");

        leaseHoldLabel.setText("Land Leasehold:");

        checklistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        checklistTable.setRowHeight(20);
        checklistPanel.setViewportView(checklistTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 434, Short.MAX_VALUE)
                        .addComponent(leaseHoldLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxChecklistGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(checklistPanel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leaseHoldLabel)
                    .addComponent(cbxChecklistGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checklistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxChecklistGroup;
    private org.sola.clients.beans.referencedata.ChecklistGroupListBean checklistGroupListBean;
    private org.sola.clients.beans.referencedata.ChecklistItemBean checklistItemBean;
    private javax.swing.JScrollPane checklistPanel;
    private org.sola.clients.swing.common.controls.JTableWithDefaultStyles checklistTable;
    private org.sola.clients.swing.ui.HeaderPanel headerPanel;
    private javax.swing.JLabel leaseHoldLabel;
    // End of variables declaration//GEN-END:variables
}
